PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: UserHasProblems
CREATE TABLE UserHasProblems (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, "user" INTEGER REFERENCES User (ID) NOT NULL, "problem" INTEGER REFERENCES Problem (ID) NOT NULL);

-- Table: User
CREATE TABLE User (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, email TEXT UNIQUE NOT NULL, password TEXT (40) NOT NULL);

-- Table: UserHasSymptoms
CREATE TABLE UserHasSymptoms (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, "user" INTEGER REFERENCES User (ID) NOT NULL,
"symptom" INTEGER REFERENCES Symptom (ID) NOT NULL, "timestamp_start" INTEGER NOT NULL, "timestamp_end" INTEGER NOT NULL,
"latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "typeofarea" INTEGER REFERENCES TypeOfArea (ID) NOT NULL);

-- Table: Sensor
CREATE TABLE Sensor (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, "latitude" FLOAT, "longitude" FLOAT, "temperature" FLOAT, "humidity" FLOAT, "airpressure" FLOAT, "timestamp" INTEGER NOT NULL);

-- Table: NASA
CREATE TABLE Nasa (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, "latitude" FLOAT, "longitude" FLOAT, "timestamp" INTEGER NOT NULL, "co2" FLOAT);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
